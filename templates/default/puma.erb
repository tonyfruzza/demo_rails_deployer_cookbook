#!/bin/bash
#
# puma		Manages the rails web server named after a cat
#
# chkconfig: - 85 15
# description:  A ruby web server built for concurrency http://puma.io
#               initscript to be placed in /etc/init.d.

### BEGIN INIT INFO
# Provides: puma
# Required-Start: $network $local_fs $remote_fs
# Required-Stop: $network $local_fs $remote_fs
# Should-Start: puma
# Should-Stop:
# Short-Description: start and stop puma
# Description: puma, rails and lolcats
### END INIT INFO

# Source function library.
. /etc/init.d/functions

prog=puma
lockfile=/var/run/$prog.pid

start() {
	echo -n $"Starting up $prog: "
	cd <%= node['app']['deploy_dir']  %>
  if [ -f .env ]
  then
  	source .env
  fi
	/usr/local/bin/bundle exec ./vendor/bundle/ruby/2.4/bin/pumactl start

	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ]
	return $RETVAL
}

stop() {
  echo -n $"Shutting down $prog: "

	cd <%= node['app']['deploy_dir'] %>
  /usr/local/bin/bundle exec ./vendor/bundle/ruby/2.4/bin/pumactl start

	killproc $prog
	RETVAL=$?
        echo
	[ $RETVAL -eq 0 ] && rm -f $lockfile
	return $RETVAL
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  status)
	status $prog
	;;
  restart|force-reload)
	stop
	start
	;;
  try-restart|condrestart)
	if status $prog > /dev/null; then
	    stop
	    start
	fi
	;;
  reload)
	exit 3
	;;
  *)
	echo $"Usage: $0 {start|stop|status|restart|try-restart|force-reload}"
	exit 2
esac
